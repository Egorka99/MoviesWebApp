2019-11-04 17:22:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных открыта в эксклюзивном режиме, открыть дополнительные соединения невозможно
The database is open in exclusive mode; can not open additional connections [90135-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.engine.Session.checkSuspended(Session.java:1369)
	at org.h2.engine.Session.transitionToState(Session.java:1361)
	at org.h2.engine.Session.waitIfExclusiveModeEnabled(Session.java:1633)
	at org.h2.command.Command.executeQuery(Command.java:186)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:114)
	at FilmsProject.DataLayer.FilmAccessDB.getFilmsByProperty(FilmAccessDB.java:68)
	at FilmsProject.BusinessLayer.FilmOperations.searchFilmByField(FilmOperations.java:21)
	at FilmsProject.Test.TestSpring.main(TestSpring.java:22)
2019-11-04 17:32:21 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1211)
	at org.h2.jdbc.JdbcPreparedStatement.checkClosed(JdbcPreparedStatement.java:1738)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1185)
	at org.h2.jdbc.JdbcResultSet.checkClosed(JdbcResultSet.java:3226)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3136)
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3268)
	at org.h2.jdbc.JdbcResultSet.getDouble(JdbcResultSet.java:752)
	at FilmsProject.DataLayer.FilmAccessDB.getFilmsByProperty(FilmAccessDB.java:76)
	at FilmsProject.BusinessLayer.FilmOperations.searchFilmByField(FilmOperations.java:21)
	at FilmsProject.Test.TestSpring.main(TestSpring.java:22)
2019-11-04 17:35:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1211)
	at org.h2.jdbc.JdbcPreparedStatement.checkClosed(JdbcPreparedStatement.java:1738)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1185)
	at org.h2.jdbc.JdbcResultSet.checkClosed(JdbcResultSet.java:3226)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3136)
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3268)
	at org.h2.jdbc.JdbcResultSet.getDouble(JdbcResultSet.java:752)
	at FilmsProject.DataLayer.FilmAccessDB.getFilmsByProperty(FilmAccessDB.java:76)
	at FilmsProject.BusinessLayer.FilmOperations.searchFilmByField(FilmOperations.java:21)
	at FilmsProject.Test.TestSpring.main(TestSpring.java:22)
2019-11-04 17:42:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: База данных уже закрыта (чтобы отключить автоматическое закрытие базы данных при останове JVM, добавьте ";DB_CLOSE_ON_EXIT=FALSE" в URL)
Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:622)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1514)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1211)
	at org.h2.jdbc.JdbcPreparedStatement.checkClosed(JdbcPreparedStatement.java:1738)
	at org.h2.jdbc.JdbcStatement.checkClosed(JdbcStatement.java:1185)
	at org.h2.jdbc.JdbcResultSet.checkClosed(JdbcResultSet.java:3226)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3136)
	at org.h2.jdbc.JdbcResultSet.get(JdbcResultSet.java:3268)
	at org.h2.jdbc.JdbcResultSet.getDouble(JdbcResultSet.java:752)
	at FilmsProject.DataLayer.FilmAccessDB.getFilmsByProperty(FilmAccessDB.java:76)
	at FilmsProject.BusinessLayer.FilmOperations.searchFilmByField(FilmOperations.java:21)
	at FilmsProject.Test.TestSpring.main(TestSpring.java:22)
2019-11-05 20:53:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 08:42:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 08:43:08 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 08:43:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:04:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:05:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:07:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:07:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:08:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:08:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:08:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:09:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-07 22:20:32 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:251)
	at FilmsProject.DataLayer.MoviesDB.<init>(MoviesDB.java:19)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:200)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1312)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at FilmsProject.Test.TestSpring.main(TestSpring.java:18)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 71 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 65 more
2019-11-07 22:28:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-08 12:08:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-08 12:38:18 database: flush
org.h2.message.DbException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:93)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2877)
	at org.h2.mvstore.MVStore.panic(MVStore.java:481)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:402)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:3579)
	at org.h2.mvstore.db.MVTableEngine$Store.open(MVTableEngine.java:170)
	at org.h2.mvstore.db.MVTableEngine.init(MVTableEngine.java:103)
	at org.h2.engine.Database.getPageStore(Database.java:2659)
	at org.h2.engine.Database.open(Database.java:675)
	at org.h2.engine.Database.openDatabase(Database.java:307)
	at org.h2.engine.Database.<init>(Database.java:301)
	at org.h2.engine.Engine.openSession(Engine.java:74)
	at org.h2.engine.Engine.openSession(Engine.java:192)
	at org.h2.engine.Engine.createSessionAndValidate(Engine.java:171)
	at org.h2.engine.Engine.createSession(Engine.java:166)
	at org.h2.engine.Engine.createSession(Engine.java:29)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:340)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:173)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:152)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:677)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:251)
	at FilmsProject.DataLayer.MoviesDB.<init>(MoviesDB.java:19)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:200)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1312)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1214)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1207)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:636)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:116)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:397)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85)
	at FilmsProject.Test.TestSpring.main(TestSpring.java:18)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: Внутренняя ошибка: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]"
General error: "java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]" [50000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:505)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 71 more
Caused by: java.lang.IllegalStateException: The file is locked: nio:D:/java/MoviesWebApp/movies/db/filmDB.mv.db [1.4.200/7]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:950)
	at org.h2.mvstore.FileStore.open(FileStore.java:172)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:381)
	... 65 more
2019-11-08 19:45:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Невозможно преобразование строки "2000" в тип "DATE"
Cannot parse "DATE" constant "2000"; SQL statement:
UPDATE Review SET createDate = 2019-11-08, reviewText = ?, rating = ? WHERE reviewId = ? [22007-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.ValueDate.parse(ValueDate.java:74)
	at org.h2.value.Value.convertToDate(Value.java:1093)
	at org.h2.value.Value.convertTo(Value.java:816)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Update.update(Update.java:176)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:240)
	at FilmsProject.DataLayer.FilmAccessDB.updateReview(FilmAccessDB.java:152)
	at FilmsProject.BusinessLayer.AdminOperations.updateReview(AdminOperations.java:22)
	at FilmsProject.SpringTest.TestSpring.main(TestSpring.java:46)
Caused by: java.lang.IllegalArgumentException: 2000
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:166)
	at org.h2.value.ValueDate.parse(ValueDate.java:72)
	... 13 more
2019-11-08 19:46:55 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Невозможно преобразование строки "2000" в тип "DATE"
Cannot parse "DATE" constant "2000"; SQL statement:
UPDATE Review SET createDate = 2019-11-08, reviewText = ?, rating = ? WHERE reviewId = ? [22007-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.ValueDate.parse(ValueDate.java:74)
	at org.h2.value.Value.convertToDate(Value.java:1093)
	at org.h2.value.Value.convertTo(Value.java:816)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Update.update(Update.java:176)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:240)
	at FilmsProject.DataLayer.FilmAccessDB.updateReview(FilmAccessDB.java:152)
	at FilmsProject.BusinessLayer.AdminOperations.updateReview(AdminOperations.java:22)
	at FilmsProject.SpringTest.TestSpring.main(TestSpring.java:46)
Caused by: java.lang.IllegalArgumentException: 2000
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:166)
	at org.h2.value.ValueDate.parse(ValueDate.java:72)
	... 13 more
2019-11-08 19:51:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Невозможно преобразование строки "2000" в тип "DATE"
Cannot parse "DATE" constant "2000"; SQL statement:
UPDATE Review SET createDate = 2019-11-08, reviewText = ?, rating = ? WHERE reviewId = ? [22007-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.ValueDate.parse(ValueDate.java:74)
	at org.h2.value.Value.convertToDate(Value.java:1093)
	at org.h2.value.Value.convertTo(Value.java:816)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Update.update(Update.java:176)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:240)
	at FilmsProject.DataLayer.FilmAccessDB.updateReview(FilmAccessDB.java:152)
	at FilmsProject.BusinessLayer.AdminOperations.updateReview(AdminOperations.java:22)
	at FilmsProject.SpringTest.TestSpring.main(TestSpring.java:46)
Caused by: java.lang.IllegalArgumentException: 2000
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:166)
	at org.h2.value.ValueDate.parse(ValueDate.java:72)
	... 13 more
2019-11-08 19:55:17 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Невозможно преобразование строки "2000" в тип "DATE"
Cannot parse "DATE" constant "2000"; SQL statement:
UPDATE Review SET createDate = 2019-11-08, reviewText = ?, rating = ? WHERE reviewId = ? [22007-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.ValueDate.parse(ValueDate.java:74)
	at org.h2.value.Value.convertToDate(Value.java:1093)
	at org.h2.value.Value.convertTo(Value.java:816)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Update.update(Update.java:176)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:240)
	at FilmsProject.DataLayer.FilmAccessDB.updateReview(FilmAccessDB.java:152)
	at FilmsProject.BusinessLayer.AdminOperations.updateReview(AdminOperations.java:22)
	at FilmsProject.SpringTest.TestSpring.main(TestSpring.java:46)
Caused by: java.lang.IllegalArgumentException: 2000
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:166)
	at org.h2.value.ValueDate.parse(ValueDate.java:72)
	... 13 more
2019-11-09 14:21:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#5" не установлен
Parameter "#5" is not set; SQL statement:
INSERT INTO Review VALUES (NULL, ?, ?, ?, ?, ?); [90012-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:590)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.Parameter.checkSet(Parameter.java:83)
	at org.h2.command.Prepared.checkParameters(Prepared.java:182)
	at org.h2.command.CommandContainer.update(CommandContainer.java:187)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:240)
	at FilmsProject.DataLayer.FilmAccessDB.addNewReview(FilmAccessDB.java:123)
	at FilmsProject.BusinessLayer.UserOperations.writeReview(UserOperations.java:45)
	at FilmsProject.SpringTest.TestSpring.main(TestSpring.java:47)
2019-11-09 14:21:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Параметр "#5" не установлен
Parameter "#5" is not set; SQL statement:
INSERT INTO Review VALUES (NULL, ?, ?, ?, ?, ?); [90012-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:590)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.Parameter.checkSet(Parameter.java:83)
	at org.h2.command.Prepared.checkParameters(Prepared.java:182)
	at org.h2.command.CommandContainer.update(CommandContainer.java:187)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:240)
	at FilmsProject.DataLayer.FilmAccessDB.addNewReview(FilmAccessDB.java:123)
	at FilmsProject.BusinessLayer.UserOperations.writeReview(UserOperations.java:45)
	at FilmsProject.SpringTest.TestSpring.main(TestSpring.java:47)
2019-11-09 14:28:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:29:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:29:51 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:37:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:38:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:41:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:42:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:42:44 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:42:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:43:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:43:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:46:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:50:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 14:59:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:05:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:08:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:12:11 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:12:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:12:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:14:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:14:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-09 15:14:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-10 15:20:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
2019-11-10 15:20:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Нет данных
No data is available [2000-200]
